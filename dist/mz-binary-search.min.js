/*
https://github.com/mzusin/binary-search
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var g=Object.defineProperty;var I=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable;var f=Math.pow,N=(t,e,r)=>e in t?g(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,i=(t,e)=>{for(var r in e||(e={}))v.call(e,r)&&N(t,r,e[r]);if(I)for(var r of I(e))b.call(e,r)&&N(t,r,e[r]);return t};var p=(t,e)=>{for(var r in e)g(t,r,{get:e[r],enumerable:!0})};var a={};p(a,{bfsWithLevel:()=>M,bfsWithQueue:()=>D,getDepth:()=>c,inorderTraversalIterative:()=>w,inorderTraversalRecursive:()=>x,postorderTraversalIterative:()=>k,postorderTraversalIterativeWith2Stacks:()=>y,postorderTraversalRecursive:()=>B,preorderTraversalIterative:()=>z,preorderTraversalRecursive:()=>S});var x=t=>{let e=[],r=n=>{n&&(r(n.left),e.push(n.val),r(n.right))};return r(t),e},w=t=>{if(!t)return[];let e=[],r=[],n=t;for(;n||r.length>0;){for(;n;)r.push(n),n=n.left;n=r.pop(),e.push(n.val),n=n.right}return e},B=t=>{let e=[],r=n=>{n&&(r(n.left),r(n.right),e.push(n.val))};return r(t),e},y=t=>{if(!t)return[];let e=[],r=[t],n=[];for(;r.length>0;){let o=r.pop();n.push(o),o!=null&&o.left&&r.push(o.left),o!=null&&o.right&&r.push(o.right)}for(;n.length>0;){let o=n.pop();e.push(o.val)}return e},k=t=>{if(!t)return[];let e=[t],r=[];for(;e.length>0;){let n=e.pop();n.left&&e.push(n.left),n.right&&e.push(n.right),r.unshift(n.val)}return r},S=t=>{let e=[],r=n=>{n&&(e.push(n.val),r(n.left),r(n.right))};return r(t),e},z=t=>{if(!t)return[];let e=[],r=[t];for(;r.length>0;){let n=r.pop();e.push(n.val),n.right&&r.push(n.right),n.left&&r.push(n.left)}return e},D=t=>{if(!t)return[];let e=[t],r=[];for(;e.length>0;){let n=e.shift();r.push(n.val),n.left&&e.push(n.left),n.right&&e.push(n.right)}return r},M=t=>{if(!t)return[];let e=[t],r=[],n=0;for(;e.length>0;){let o=e.length;for(;o>0;){let s=e.shift();r.push(s.val),s.left&&e.push(s.left),s.right&&e.push(s.right),o--}console.log(n),n++}return r},c=t=>{if(!t)return 0;let e=c(t.left),r=c(t.right);return 1+Math.max(e,r)};var d={};p(d,{convertSortedArrayToBalancedBSTIterative:()=>W,convertSortedArrayToBalancedBSTRecursive:()=>R});var R=t=>{if(!t||t.length<=0)return;let e=(r,n)=>{if(r>n)return;let o=Math.floor((n+r)/2);return{left:e(r,o-1),val:t[o],right:e(o+1,n)}};return e(0,t.length-1)},W=t=>{if(!t||t.length<=0)return;let e=Math.floor(t.length/2),r={val:t[e]},n=[[r,0,e-1],[r,e+1,t.length-1]];for(;n.length>0;){let[o,s,h]=n.shift();if(s>h)break;e=Math.floor((s+h)/2);let u={val:t[e]};u.val<=o.val?o.left=u:o.right=u,n.push([u,s,e-1]),n.push([u,e+1,h])}return r};var m={};p(m,{countCompleteBinaryTreeNodes:()=>T,getCompleteBinaryTreeDepth:()=>l});var l=t=>t?1+l(t.left):0,T=t=>{if(!t)return 0;let e=l(t.left),r=l(t.right);return e===r?f(2,e)+T(t.right):f(2,r)+T(t.left)};var q=i(i(i({},a),d),m);window.mzBinaryTree=window.mzBinaryTree||q;})();
