/*
https://github.com/mzusin/binary-search
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var I=Object.defineProperty;var T=Object.getOwnPropertySymbols;var x=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable;var g=Math.pow,m=(e,r,t)=>r in e?I(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,i=(e,r)=>{for(var t in r||(r={}))x.call(r,t)&&m(e,t,r[t]);if(T)for(var t of T(r))w.call(r,t)&&m(e,t,r[t]);return e};var h=(e,r)=>{for(var t in r)I(e,t,{get:r[t],enumerable:!0})};var c={};h(c,{bfsWithLevel:()=>W,bfsWithQueue:()=>M,getDepth:()=>f,inorderTraversalIterative:()=>B,inorderTraversalRecursive:()=>y,postorderTraversalIterative:()=>S,postorderTraversalIterativeWith2Stacks:()=>D,postorderTraversalRecursive:()=>k,preorderTraversalIterative:()=>z,preorderTraversalRecursive:()=>R,symmetricTraversal:()=>q});var y=e=>{let r=[],t=n=>{n&&(t(n.left),r.push(n.val),t(n.right))};return t(e),r},B=e=>{if(!e)return[];let r=[],t=[],n=e;for(;n||t.length>0;){for(;n;)t.push(n),n=n.left;n=t.pop(),r.push(n.val),n=n.right}return r},k=e=>{let r=[],t=n=>{n&&(t(n.left),t(n.right),r.push(n.val))};return t(e),r},D=e=>{if(!e)return[];let r=[],t=[e],n=[];for(;t.length>0;){let s=t.pop();n.push(s),s!=null&&s.left&&t.push(s.left),s!=null&&s.right&&t.push(s.right)}for(;n.length>0;){let s=n.pop();r.push(s.val)}return r},S=e=>{if(!e)return[];let r=[e],t=[];for(;r.length>0;){let n=r.pop();n.left&&r.push(n.left),n.right&&r.push(n.right),t.unshift(n.val)}return t},R=e=>{let r=[],t=n=>{n&&(r.push(n.val),t(n.left),t(n.right))};return t(e),r},z=e=>{if(!e)return[];let r=[],t=[e];for(;t.length>0;){let n=t.pop();r.push(n.val),n.right&&t.push(n.right),n.left&&t.push(n.left)}return r},M=e=>{if(!e)return[];let r=[e],t=[];for(;r.length>0;){let n=r.shift();t.push(n.val),n.left&&r.push(n.left),n.right&&r.push(n.right)}return t},W=e=>{if(!e)return[];let r=[e],t=[],n=0;for(;r.length>0;){let s=r.length;for(;s>0;){let u=r.shift();t.push(u.val),u.left&&r.push(u.left),u.right&&r.push(u.right),s--}console.log(n),n++}return t},f=e=>{if(!e)return 0;let r=f(e.left),t=f(e.right);return 1+Math.max(r,t)},q=e=>{let r=[],t=(n,s)=>{!n||!s||(r.push([n.val,s.val]),t(n.left,s.right),t(s.left,n.right))};return t(e==null?void 0:e.left,e==null?void 0:e.right),r};var p={};h(p,{convertSortedArrayToBalancedBSTIterative:()=>C,convertSortedArrayToBalancedBSTRecursive:()=>A});var A=e=>{if(!e||e.length<=0)return;let r=(t,n)=>{if(t>n)return;let s=Math.floor((n+t)/2);return{left:r(t,s-1),val:e[s],right:r(s+1,n)}};return r(0,e.length-1)},C=e=>{if(!e||e.length<=0)return;let r=Math.floor(e.length/2),t={val:e[r]},n=[[t,0,r-1],[t,r+1,e.length-1]];for(;n.length>0;){let[s,u,l]=n.shift();if(u>l)break;r=Math.floor((u+l)/2);let o={val:e[r]};o.val<=s.val?s.left=o:s.right=o,n.push([o,u,r-1]),n.push([o,r+1,l])}return t};var d={};h(d,{countCompleteBinaryTreeNodes:()=>a,getCompleteBinaryTreeDepth:()=>N});var N=e=>e?1+N(e.left):0,v=e=>e?1+v(e.left):0,b=e=>e?1+b(e.right):0,a=e=>{if(!e)return 0;let r=v(e.left),t=b(e.right);return r===t?g(2,r+1)-1:a(e.left)+a(e.right)+1};var L=i(i(i({},c),p),d);window.mzBinaryTree=window.mzBinaryTree||L;})();
