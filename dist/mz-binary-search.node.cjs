/*
https://github.com/mzusin/binary-search
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var u=Object.defineProperty;var i=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var l=Object.prototype.hasOwnProperty;var p=(s,r)=>{for(var t in r)u(s,t,{get:r[t],enumerable:!0})},a=(s,r,t,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of h(r))!l.call(s,n)&&n!==t&&u(s,n,{get:()=>r[n],enumerable:!(e=i(r,n))||e.enumerable});return s};var c=s=>a(u({},"__esModule",{value:!0}),s);var x={};p(x,{bfsWithLevel:()=>b,bfsWithQueue:()=>m,inorderTraversalIterative:()=>T,inorderTraversalRecursive:()=>f,postorderTraversalIterative:()=>v,postorderTraversalIterativeWith2Stacks:()=>d,postorderTraversalRecursive:()=>I,preorderTraversalIterative:()=>g,preorderTraversalRecursive:()=>N});module.exports=c(x);var f=s=>{let r=[],t=e=>{e&&(t(e.left),r.push(e.val),t(e.right))};return t(s),r},T=s=>{if(!s)return[];let r=[],t=[],e=s;for(;e||t.length>0;){for(;e;)t.push(e),e=e.left;e=t.pop(),e&&(r.push(e.val),e=e.right)}return r},I=s=>{let r=[],t=e=>{e&&(t(e.left),t(e.right),r.push(e.val))};return t(s),r},d=s=>{if(!s)return[];let r=[],t=[s],e=[];for(;t.length>0;){let n=t.pop();e.push(n),n!=null&&n.left&&t.push(n.left),n!=null&&n.right&&t.push(n.right)}for(;e.length>0;){let n=e.pop();r.push(n.val)}return r},v=s=>{if(!s)return[];let r=[s],t=[];for(;r.length;){let e=r.pop();e.left&&r.push(e.left),e.right&&r.push(e.right),t.unshift(e.val)}return t},N=s=>{let r=[],t=e=>{e&&(r.push(e.val),t(e.left),t(e.right))};return t(s),r},g=s=>{if(!s)return[];let r=[],t=[s];for(;t.length>0;){let e=t.pop();r.push(e.val),e.right&&t.push(e.right),e.left&&t.push(e.left)}return r},m=s=>{if(!s)return[];let r=[s],t=[];for(;r.length>0;){let e=r.shift();t.push(e.val),e.left&&r.push(e.left),e.right&&r.push(e.right)}return t},b=s=>{if(!s)return[];let r=[s],t=[],e=0;for(;r.length>0;){let n=r.length;for(;n>0;){let o=r.shift();t.push(o.val),o.left&&r.push(o.left),o.right&&r.push(o.right),n--}e++}return t};0&&(module.exports={bfsWithLevel,bfsWithQueue,inorderTraversalIterative,inorderTraversalRecursive,postorderTraversalIterative,postorderTraversalIterativeWith2Stacks,postorderTraversalRecursive,preorderTraversalIterative,preorderTraversalRecursive});
